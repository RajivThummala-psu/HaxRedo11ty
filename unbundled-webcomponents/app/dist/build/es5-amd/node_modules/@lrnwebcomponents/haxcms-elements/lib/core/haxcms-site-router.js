define(["exports","../../../../@vaadin/router/dist/vaadin-router.js","../../../../mobx/lib/mobx.module.js","./haxcms-site-store.js"],function(_exports,_vaadinRouter,_mobxModule,_haxcmsSiteStore){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSSiteRouter=void 0;function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=babelHelpers.getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=babelHelpers.getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget)}else{result=Super.apply(this,arguments)}return babelHelpers.possibleConstructorReturn(this,result)}}function _isNativeReflectConstruct(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return!0}catch(e){return!1}}/**
 * `haxcms-site-router`
 * `front-end router for haxcms`
 */var HAXCMSSiteRouter=/*#__PURE__*/function(_HTMLElement){babelHelpers.inherits(HAXCMSSiteRouter,_HTMLElement);var _super=_createSuper(HAXCMSSiteRouter);babelHelpers.createClass(HAXCMSSiteRouter,null,[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   */get:function get(){return"haxcms-site-router"}/**
   * ready life cycle
   */}]);function HAXCMSSiteRouter(){var _this;babelHelpers.classCallCheck(this,HAXCMSSiteRouter);_this=_super.call(this);// create router
var options={};if(_this.baseURI){options.baseUrl=_this.baseURI}_this.router=new _vaadinRouter.Router(babelHelpers.assertThisInitialized(_this),options);/**
     * Subscribe to changes in the manifest
     */_this.__disposer=(0,_mobxModule.autorun)(function(){_this._updateRouter(_haxcmsSiteStore.store.routerManifest)});window.addEventListener("vaadin-router-location-changed",_this._routerLocationChanged.bind(babelHelpers.assertThisInitialized(_this)));return _this}/**
   * Detached life cycle
   */babelHelpers.createClass(HAXCMSSiteRouter,[{key:"disconnectedCallback",value:function disconnectedCallback(){this.__disposer();window.removeEventListener("vaadin-router-location-changed",this._routerLocationChanged.bind(this));babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSSiteRouter.prototype),"disconnectedCallback",this).call(this)}/**
   * Update the router based on a manifest.
   * This should not be called directly. Use the
   * 'haxcms-router-manifest-changed' event
   *
   * @param {object} routerManifest
   */},{key:"_updateRouter",value:function _updateRouter(routerManifest){if(!routerManifest||"undefined"===typeof routerManifest.items)return;var routerItems=routerManifest.items.map(function(i){return{path:i.slug,name:i.id,component:"fake-".concat(i.id,"-e")}});this.router.setRoutes([].concat(babelHelpers.toConsumableArray(routerItems),[{path:"/",component:"fake-home-e",name:"home"},{path:"/(.*)",component:"fake-404-e",name:"404"}]))}/**
   * React to page changes in the vaadin router and convert it
   * to a change in the mobx store.
   * @param {event} e
   */},{key:"_routerLocationChanged",value:function _routerLocationChanged(e){// store local state
_haxcmsSiteStore.store.location=e.detail.location}}]);return HAXCMSSiteRouter}(/*#__PURE__*/babelHelpers.wrapNativeSuper(HTMLElement));_exports.HAXCMSSiteRouter=HAXCMSSiteRouter;window.customElements.define(HAXCMSSiteRouter.tag,HAXCMSSiteRouter)});