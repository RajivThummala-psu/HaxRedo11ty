define(["exports","require","../../../../lit-element/lit-element.js","./haxcms-site-store.js","../../../../mobx/lib/mobx.module.js"],(function(_exports,_require,_litElement,_haxcmsSiteStore,_mobxModule){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HAXCMSSiteEditorUI=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HAXCMSSiteEditorUI extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host *:not(:defined) {
          display: none;
        }
        :host {
          display: block;
          position: fixed;
          left: 0;
          top: 0;
          bottom: 0;
          background-color: var(--haxcms-system-bg, #37474f);
          z-index: 10000;
          border-right: 2px solid black;
          visibility: visible;
        }
        :host([edit-mode]) {
          z-index: 9999;
        }
        :host([dashboard-opened]) {
          left: 50vw;
        }
        @media screen and (max-width: 800px) {
          :host([dashboard-opened]) {
            left: 90vw;
          }
          :host([edit-mode]) {
            bottom: unset;
          }
          :host([edit-mode]) paper-fab,
          :host([edit-mode]) paper-icon-button,
          :host([edit-mode]) paper-avatar {
            width: 24px;
            height: 24px;
            padding: 1px;
            margin: 0;
            --iron-icon-width: 20px;
            --iron-icon-height: 20px;
          }
        }
        /**
         * Dashboard open trumps all contextual settings
         */
        :host([dashboard-opened]) #editbutton,
        :host([dashboard-opened]) #editdetails,
        :host([dashboard-opened]) #deletebutton,
        :host([dashboard-opened]) #addbutton,
        :host([dashboard-opened]) #outlinebutton {
          display: none !important;
        }
        :host *[hidden] {
          display: none;
        }
        paper-fab:not(:defined),
        simple-tooltip:not(:defined),
        paper-icon-button:not(:defined) {
          display: none !important;
        }
        paper-avatar {
          width: 48px;
          height: 48px;
          line-height: 20px;
          padding: 12px;
        }
        paper-fab {
          display: block;
          width: 48px;
          height: 48px;
          line-height: 20px;
          background-color: black;
          color: #ffffff;
          transition: 0.3s all ease-in-out;
          padding: 12px;
          margin: 0;
          position: relative;
          box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),
            0 3px 14px 2px rgba(0, 0, 0, 0.12),
            0 5px 5px -3px rgba(0, 0, 0, 0.4);
        }
        :host([painting]) {
          opacity: 0;
          visibility: hidden;
        }
        paper-icon-button {
          display: block;
          padding: 8px;
          width: 48px;
          min-width: 48px;
          height: 48px;
          border-radius: 50%;
          margin: 0px;
          background-color: black;
          color: #ffffff;
          transition: 0.3s all ease-in-out;
          box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),
            0 3px 14px 2px rgba(0, 0, 0, 0.12),
            0 5px 5px -3px rgba(0, 0, 0, 0.4);
        }
        paper-avatar:hover,
        paper-avatar:focus,
        paper-avatar:active {
          cursor: pointer;
        }
        paper-fab:hover,
        paper-fab:focus,
        paper-fab:active,
        paper-icon-button:hover,
        paper-icon-button:focus,
        paper-icon-button:active {
          background-color: var(--haxcms-color, blue);
          color: #ffffff;
        }
        #cancelbutton {
          background-color: var(--haxcms-system-danger-color);
        }
        #editbutton,
        #editdetails,
        #deletebutton {
          visibility: hidden;
          opacity: 0;
        }
        :host([page-allowed]) #editbutton,
        :host([page-allowed]) #editdetails,
        :host([page-allowed]) #deletebutton {
          visibility: visible;
          opacity: 1;
        }
        :host([edit-mode]) #editbutton {
          color: white;
          background-color: var(--haxcms-system-action-color, blue) !important;
        }
        :host([edit-mode]) #manifestbutton,
        :host([edit-mode]) #editdetails,
        :host([edit-mode]) #deletebutton,
        :host([edit-mode]) #addbutton,
        :host([edit-mode]) #outlinebutton {
          display: none !important;
        }

        :host(:hover),
        :host(:active),
        :host(:focus) {
          opacity: 1;
        }
        simple-tooltip {
          --simple-tooltip-background: #000000;
          --simple-tooltip-opacity: 1;
          --simple-tooltip-text-color: #ffffff;
          --simple-tooltip-delay-in: 0;
          --simple-tooltip-duration-in: 200ms;
          --simple-tooltip-duration-out: 0;
          --simple-tooltip-border-radius: 0;
          --simple-tooltip-font-size: 14px;
          --simple-tooltip-width: 145px;
        }
      `]}static get tag(){return"haxcms-site-editor-ui"}constructor(){super(),this.__disposer=[],this.painting=!0,this.pageAllowed=!1,this.editMode=!1,this.manifestEditMode=!1,this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0})),setTimeout(()=>{new Promise((res,rej)=>_require.default(["./haxcms-outline-editor-dialog.js"],res,rej)),new Promise((res,rej)=>_require.default(["./haxcms-site-dashboard.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../hax-iconset/hax-iconset.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../simple-tooltip/simple-tooltip.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-icon-button/paper-icon-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../simple-modal/simple-modal.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-fab/paper-fab.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../simple-fields/lib/simple-fields-form.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../paper-avatar/paper-avatar.js"],res,rej))},0)}render(){return _litElement.html`
      <paper-avatar
        @click=${this.redirectToSites}
        id="username"
        label="${this.userName}"
        two-chars
        src="${this.userPicture}"
      ></paper-avatar>
      <paper-fab
        id="editbutton"
        icon="${this.__editIcon}"
        @click="${this._editButtonTap}"
        title="${this.__editText}"
        voice-command="edit (this) page"
      ></paper-fab>
      <paper-fab
        id="cancelbutton"
        icon="icons:cancel"
        @click="${this._cancelButtonTap}"
        .hidden="${!this.editMode}"
        title="Cancel editing"
        voice-command="cancel (editing)"
      ></paper-fab>
      <paper-fab
        id="editdetails"
        icon="hax:page-details"
        @click="${this._editDetailsButtonTap}"
        title="Edit details"
        voice-command="edit (page) details"
      ></paper-fab>
      <paper-icon-button
        id="addbutton"
        icon="hax:add-page"
        @click="${this._addButtonTap}"
        title="Add page"
        voice-command="add page"
      ></paper-icon-button>
      <paper-fab
        id="deletebutton"
        icon="icons:delete"
        @click="${this._deleteButtonTap}"
        title="Delete page"
        voice-command="delete page"
      ></paper-fab>
      <paper-icon-button
        id="outlinebutton"
        icon="hax:site-map"
        @click="${this._outlineButtonTap}"
        title="Edit site outline"
        voice-command="edit site outline"
      ></paper-icon-button>
      <paper-icon-button
        id="manifestbutton"
        icon="${this.icon}"
        @click="${this._manifestButtonTap}"
        title="${this.__settingsText}"
        voice-command="edit site settings"
      ></paper-icon-button>
      <simple-tooltip for="username" position="right" offset="14"
        >Back to site list</simple-tooltip
      >
      <simple-tooltip for="cancelbutton" position="right" offset="14"
        >Cancel editing</simple-tooltip
      >
      <simple-tooltip for="editbutton" position="right" offset="14"
        >${this.__editText}</simple-tooltip
      >
      <simple-tooltip for="editdetails" position="right" offset="14"
        >Edit details</simple-tooltip
      >
      <simple-tooltip for="deletebutton" position="right" offset="14"
        >Delete page</simple-tooltip
      >
      <simple-tooltip for="addbutton" position="right" offset="14"
        >Add page</simple-tooltip
      >
      <simple-tooltip for="outlinebutton" position="right" offset="14"
        >Edit site outline</simple-tooltip
      >
      <simple-tooltip for="manifestbutton" position="right" offset="14"
        >${this.__settingsText}</simple-tooltip
      >
    `}redirectToSites(){let redirectUrl="",tmp=document.createElement("a");tmp.href=window.location.href,redirectUrl=/^http/.test(tmp.href)?"http://"+tmp.host:"https://"+tmp.host,window.location.replace(redirectUrl)}firstUpdated(changedProperties){this.dispatchEvent(new CustomEvent("haxcms-load-user-data",{bubbles:!0,composed:!0,cancelable:!1,detail:!0})),this.shadowRoot.querySelectorAll("[voice-command]").forEach(el=>{"editbutton"==el.getAttribute("id")?this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: save (this) page",context:el,callback:"click"}})):"manifestbutton"==el.getAttribute("id")&&this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: cancel site settings",context:el,callback:"click"}})),this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: "+el.getAttribute("voice-command"),context:el,callback:"click"}}))}),this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"editMode"==propName&&(this._editModeChanged(this[propName],oldValue),this.dispatchEvent(new CustomEvent("edit-mode-changed",{detail:this[propName]}))),"manifestEditMode"==propName&&(this._manifestEditModeChanged(this[propName],oldValue),this.dispatchEvent(new CustomEvent("manifest-edit-mode-changed",{detail:this[propName]}))),"dashboardOpened"==propName&&this._dashboardOpenedChanged(this[propName],oldValue)})}static get properties(){return{userName:{type:String,attribute:"user-name"},userPicture:{type:String,attribute:"user-picture"},__editIcon:{type:String},__editText:{type:String},__settingsText:{type:String},painting:{type:Boolean,reflect:!0},pageAllowed:{type:Boolean,attribute:"page-allowed",reflect:!0},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},manifestEditMode:{type:Boolean,attribute:"manifest-edit-mode",reflect:!0},activeTitle:{type:String,attribute:"active-title"},manifest:{type:Object},icon:{type:String},dashboardOpened:{type:Boolean,reflect:!0,attribute:"dashboard-opened"}}}connectedCallback(){super.connectedCallback(),(0,_mobxModule.autorun)(reaction=>{_haxcmsSiteStore.store.userData&&(this.userName=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.userData.userName),this.userPicture=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.userData.userPicture)),this.__disposer.push(reaction)}),(0,_mobxModule.autorun)(reaction=>{this.editMode=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.editMode),this.__disposer.push(reaction)}),(0,_mobxModule.autorun)(reaction=>{this.manifest=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.manifest),this.icon="hax:site-settings",this.__disposer.push(reaction)}),(0,_mobxModule.autorun)(reaction=>{this.dashboardOpened=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.dashboardOpened),this.__disposer.push(reaction)}),(0,_mobxModule.autorun)(reaction=>{const activeItem=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.activeItem);activeItem&&activeItem.id?(this.activeTitle=activeItem.title,this.pageAllowed=!0):this.pageAllowed=!1,this.__disposer.push(reaction)})}disconnectedCallback(){for(var i in this.__disposer)this.__disposer[i].dispose();super.disconnectedCallback()}_dashboardOpenedChanged(newValue,oldValue){newValue?(this.__settingsText="Close site settings",this.icon="icons:cancel"):newValue||(this.__settingsText="Edit site settings",this.icon="hax:site-settings")}_editButtonTap(e){this.editMode=!this.editMode,this.editMode||this.dispatchEvent(new CustomEvent("haxcms-save-node",{bubbles:!0,composed:!0,cancelable:!1,detail:_haxcmsSiteStore.store.activeItem})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_editDetailsButtonTap(e){const evt=new CustomEvent("haxcms-load-node-fields",{bubbles:!0,composed:!0,cancelable:!1,detail:e.target});window.dispatchEvent(evt)}_cancelButtonTap(e){this.editMode=!1,this.dispatchEvent(new CustomEvent("hax-cancel",{bubbles:!0,composed:!0,cancelable:!1,detail:e.detail})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_addButtonTap(e){this.__newForm=document.createElement("simple-fields-form"),this.__newForm.fields=[{property:"title",title:"Title",description:"Main title for this page in menus",inputMethod:"textfield",required:!0,icon:"editor:title"},{property:"location",title:"Location",description:"What is displayed in the bnowser bar after your site name / URL",inputMethod:"textfield",required:!0,icon:"device:gps-fixed"}];let b1=document.createElement("paper-button"),icon=document.createElement("iron-icon");icon.icon="icons:add",b1.appendChild(icon),b1.appendChild(document.createTextNode("Create page")),b1.style.color="white",b1.style.backgroundColor="#2196f3",b1.addEventListener("click",this._createNewItem.bind(this));let b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel")),b2.setAttribute("dialog-dismiss","dialog-dismiss");let b=document.createElement("span");b.appendChild(b1),b.appendChild(b2);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Add a new page",styles:{"--simple-modal-width":"70vw","--simple-modal-max-width":"70vw"},elements:{content:this.__newForm,buttons:b},invokedBy:this.shadowRoot.querySelector("#addbutton"),clone:!1,modal:!0}});window.dispatchEvent(evt)}_createNewItem(e){const evt=new CustomEvent("haxcms-create-node",{bubbles:!0,composed:!0,cancelable:!1,detail:{values:this.__newForm.value}});this.dispatchEvent(evt)}_updateItem(e){var values,local=e.target;values=local.__form?local.__form.value:local.parentNode.__form.value,window.dispatchEvent(new CustomEvent("haxcms-save-node-details",{bubbles:!0,composed:!0,cancelable:!0,detail:values})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}_deleteButtonTap(e){let c=document.createElement("span");c.innerHTML=`"${_haxcmsSiteStore.store.activeItem.title}" will be removed from the outline but its content stays on the file system.`;let b1=document.createElement("paper-button"),icon=document.createElement("iron-icon");icon.icon="icons:delete",b1.appendChild(icon),b1.appendChild(document.createTextNode("Confirm")),b1.style.color="white",b1.style.backgroundColor="#ee0000",b1.addEventListener("click",this._deleteActive.bind(this));let b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel")),b2.setAttribute("dialog-dismiss","dialog-dismiss");let b=document.createElement("span");b.appendChild(b1),b.appendChild(b2);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Are you sure you want to delete this page?",styles:{"--simple-modal-width":"70vw","--simple-modal-max-width":"70vw"},elements:{content:c,buttons:b},invokedBy:this.shadowRoot.querySelector("#deletebutton"),clone:!1,modal:!0}});window.dispatchEvent(evt)}_deleteActive(e){const evt=new CustomEvent("haxcms-delete-node",{bubbles:!0,composed:!0,cancelable:!1,detail:{item:_haxcmsSiteStore.store.activeItem}});this.dispatchEvent(evt)}_outlineButtonTap(e){const evt=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Edit site outline",styles:{"--simple-modal-width":"70vw","--simple-modal-height":"70vh","--simple-modal-max-width":"70vw","--simple-modal-max-height":"70vh"},elements:{content:document.createElement("haxcms-outline-editor-dialog")},invokedBy:this.shadowRoot.querySelector("#outlinebutton"),clone:!1,modal:!0}});window.dispatchEvent(evt)}_manifestButtonTap(e){window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}})),window.dispatchEvent(new CustomEvent("haxcms-load-site-dashboard",{bubbles:!0,composed:!0,cancelable:!1,detail:e.target}))}_editModeChanged(newValue,oldValue){newValue?(this.__editIcon="icons:save",this.__editText="Save page content"):(this.__editIcon="hax:page-edit",this.__editText="Edit page content"),void 0!==oldValue&&(_haxcmsSiteStore.store.editMode=newValue)}_outlineEditModeChanged(newValue,oldValue){this.dispatchEvent(new CustomEvent("haxcms-outline-edit-mode-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:newValue}))}_manifestEditModeChanged(newValue,oldValue){this.dispatchEvent(new CustomEvent("haxcms-manifest-edit-mode-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:newValue}))}}_exports.HAXCMSSiteEditorUI=HAXCMSSiteEditorUI,window.customElements.define(HAXCMSSiteEditorUI.tag,HAXCMSSiteEditorUI)}));