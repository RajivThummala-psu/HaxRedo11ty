/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement,html,css}from"../../../../../lit-element/lit-element.js";import{store}from"../../core/haxcms-site-store.js";import{autorun,toJS}from"../../../../../mobx/lib/mobx.module.js";class SiteMenu extends LitElement{static get styles(){return[css`
        :host {
          display: block;
          height: 100vh;
        }
        map-menu {
          padding: var(--site-menu-padding);
          background-color: var(--site-menu-background-color);
          color: var(--site-menu-color);
          --map-menu-active-color: var(--site-menu-active-color);
          --map-menu-container-padding: var(--site-menu-container-padding);
          --map-menu-container-background-color: var(
            --site-menu-container-background-color
          );
          --map-menu-container-color: var(--site-menu-container-color);
          --map-menu-item-active-item-color: var(
            --site-menu-item-active-item-color
          );
        }
        map-menu[disabled] {
          pointer-events: none;
          opacity: 0.5;
          background-color: grey;
        }
        map-menu:not(:defined) {
          display: none;
        }

        map-menu::-webkit-scrollbar-track {
          -webkit-box-shadow: inset 0 0 4px
            var(--site-menu-scrolltrack-bg-color, rgba(56, 63, 69, 0.9));
          border-radius: 0;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar {
          width: 2px;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar-thumb {
          border-radius: 1px;
          -webkit-box-shadow: inset 0 0 4px var(--site-menu-bg-shadow, #747474);
          background-color: var(--site-menu-bg-color, #383f45);
        }
      `]}static get tag(){return"site-menu"}constructor(){super(),import("../../../../map-menu/map-menu.js"),this.hideActiveIndicator=!1,this.preventAutoScroll=!1,this.trackIcon="",this.__disposer=[],autorun(reaction=>{this.routerManifest=Object.assign({},toJS(store.routerManifest)),this.__disposer.push(reaction)}),autorun(reaction=>{this.editMode=toJS(store.editMode),this.__disposer.push(reaction)})}render(){return html`
      <map-menu
        ?disabled="${this.editMode}"
        .selected="${this.activeId}"
        .manifest="${this.routerManifest}"
        ?active-indicator="${!this.hideActiveIndicator}"
        selected="${this.activeId}"
        ?auto-scroll="${!this.preventAutoScroll}"
        @active-item="${this.mapMenuActiveChanged}"
      ></map-menu>
    `}firstUpdated(changedProperties){autorun(reaction=>{this.activeId=toJS(store.activeId),this.__disposer.push(reaction)})}static get properties(){return{routerManifest:{type:Object},activeId:{type:String,attribute:"active-id"},hideActiveIndicator:{type:Boolean,attribute:"hide-active-indicator"},preventAutoScroll:{type:Boolean,attribute:"prevent-auto-scroll"},trackIcon:{type:String,attribute:"track-icon"}}}disconnectedCallback(){for(var i in this.__disposer)this.__disposer[i].dispose();super.disconnectedCallback()}mapMenuActiveChanged(e){e.detail.trackIcon=this.trackIcon;let userData=JSON.parse(window.localStorage.getItem("HAXCMSSystemData"));for(var i in userData.manifests&&void 0===userData.manifests[this.routerManifest.id]&&(userData.manifests[this.routerManifest.id]={accessData:{}}),userData.manifests[this.routerManifest.id].accessData||(userData.manifests[this.routerManifest.id].accessData={}),userData.manifests[this.routerManifest.id].accessData[e.detail.id]={timestamp:Math.floor(Date.now()/1e3),trackIcon:this.trackIcon},this.routerManifest.items)this.routerManifest.items[i].id===e.detail.id&&(this.routerManifest.items[i].metadata.accessData=userData.manifests[this.routerManifest.id].accessData[e.detail.id]);window.localStorage.setItem("HAXCMSSystemData",JSON.stringify(userData))}}window.customElements.define(SiteMenu.tag,SiteMenu);export{SiteMenu};